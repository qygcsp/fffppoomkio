# .github/workflows/android_kernel_ci.yml
name: Android 9 Kernel Builder

on:
  workflow_dispatch:

jobs:
  build-kernel:
    name: Build Kernel
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    env:
      ARCH: arm64
      NDK_VERSION: r20b
      KCFLAGS: "-Wno-error=array-bounds -Wno-error=unused-function"

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        repository: qgzslm/ppoomkio
        ref: master
        submodules: recursive
        fetch-depth: 0

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            bc bison build-essential clang-12 flex lld-12 llvm-12 \
            libncurses-dev python2 unzip zlib1g-dev
        sudo ln -sf /usr/bin/python2 /usr/bin/python

    - name: Download NDK (Multi-source)
      run: |
        # 多镜像源下载
        for url in \
          "https://dl.google.com/android/repository/android-ndk-${{ env.NDK_VERSION }}-linux-x86_64.zip" \
          "https://mirrors.ustc.edu.cn/android/repository/android-ndk-${{ env.NDK_VERSION }}-linux-x86_64.zip"; 
        do
          if wget -q --tries=3 --timeout=30 "$url"; then
            break
          fi
        done
        unzip -q android-ndk-${{ env.NDK_VERSION }}-linux-x86_64.zip

    - name: Apply critical fixes
      run: |
        # 信号集数组修复补丁
        find include/ -name "signal.h" -exec sed -i -E '
          /^#define _NSIG_WORDS/d;
          s/unsigned long sig\[_NSIG_WORDS\]/unsigned long sig[2]/g;
          s/(case [2-4]:.*sig\[)([0-9])(\])/if (_NSIG_WORDS > \2) \1\2\3/g;
          1i #define _NSIG_WORDS 2
        ' {} +

        # 修复汇编偏移计算
        sed -i 's/->sig\[1\]/->sig[0]/g' arch/arm64/kernel/asm-offsets.c

    - name: Build kernel
      run: |
        export CLANG_BIN="$PWD/android-ndk-${{ env.NDK_VERSION }}/toolchains/llvm/prebuilt/linux-x86_64/bin"
        export GCC_BIN="$PWD/android-ndk-${{ env.NDK_VERSION }}/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin"

        # 配置阶段
        make O=out ARCH=$ARCH \
            CC="$CLANG_BIN/clang" \
            LD="$CLANG_BIN/ld.lld" \
            CROSS_COMPILE="$GCC_BIN/aarch64-linux-android-" \
            msmcortex-NX563J-perf_defconfig

        # 编译阶段
        make -j$(( ($(nproc) * 3) / 4 )) O=out ARCH=$ARCH \
            CC="$CLANG_BIN/clang" \
            LD="$CLANG_BIN/ld.lld" \
            AR="$CLANG_BIN/llvm-ar" \
            STRIP="$CLANG_BIN/llvm-strip" \
            NM="$CLANG_BIN/llvm-nm" \
            KCFLAGS="$KCFLAGS" \
            CFLAGS_KERNEL="-Wno-error=stringop-overread"

    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: kernel-image
        path: out/arch/${{ env.ARCH }}/boot/Image
