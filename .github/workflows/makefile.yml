# .github/workflows/android-kernel-ci.yml
name: Android Kernel CI

on:
  workflow_dispatch:

jobs:
  build-kernel:
    name: Build Android 9 Kernel
    runs-on: ubuntu-22.04
    env:
      ARCH: arm64
      SUBARCH: arm64
      CLANG_TRIPLE: aarch64-linux-android-
      LINUX_GCC_CROSS_COMPILE_PREFIX: aarch64-linux-android-
      LINUX_GCC_CROSS_COMPILE_ARM32_PREFIX: arm-linux-androideabi-

    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4
        with:
          repository: qgzslm/ppoomkio
          ref: master

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              flex \
              bison \
              build-essential \
              libncurses-dev \
              clang \
              lld \
              llvm \
              unzip

      - name: Setup AOSP toolchain
        run: |
          mkdir -p aosp-tools
          cd aosp-tools
          wget https://dl.google.com/android/repository/android-ndk-r20b-linux-x86_64.zip
          unzip -q android-ndk-r20b-linux-x86_64.zip
          echo "ANDROID_TOOLCHAIN=$(pwd)/android-ndk-r20b/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_ENV
          echo "$ANDROID_TOOLCHAIN" >> $GITHUB_PATH
          echo "CLANG_BIN=$ANDROID_TOOLCHAIN/clang" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          # 生成配置文件
          make O=out ARCH=${{ env.ARCH }} \
              CC="${{ env.CLANG_BIN }}" \
              CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
              CROSS_COMPILE="${{ env.LINUX_GCC_CROSS_COMPILE_PREFIX }}" \
              msmcortex-NX563J-perf_defconfig

          # 完整编译
          make -j$(nproc --all) O=out ARCH=${{ env.ARCH }} \
              CC="${{ env.CLANG_BIN }}" \
              CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
              CROSS_COMPILE="${{ env.LINUX_GCC_CROSS_COMPILE_PREFIX }}" \
              CROSS_COMPILE_ARM32="${{ env.LINUX_GCC_CROSS_COMPILE_ARM32_PREFIX }}" \
              LD=ld.lld \
              AR=llvm-ar \
              NM=llvm-nm \
              OBJCOPY=llvm-objcopy \
              OBJDUMP=llvm-objdump \
              STRIP=llvm-strip \
              KCFLAGS="-Wno-error=unused-function -Wno-error=unused-variable"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: out/arch/arm64/boot/Image
